{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";iYACA,4wNAeA,QAdgB,yBADhB,4FACgB,SADhB,QAMG,EALa,EAWb,OAZH,EACgB,OADhB,EACgB,6CACd,sGACyBA,MAAMC,EAAAA,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,GAAY,2CACpB,0FAED,WAA8BC,GAAE,yFACPL,MAAMC,EAAAA,EAAAA,kBAA+BI,IAAI,OAAlD,OAARH,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,GAAY,2CACpB,+CAZH,6DAYG,EAXa,4SCDhB,smNAIA,IAAQE,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA2BF,QAxB8B,CACtBC,cAAa,SAACX,GAAI,oGACjBA,EAAI,CAAF,gEAIOK,EAAS,uCAAEO,IAAIR,EAAmBJ,IAAE,0CAL5B,EAMxB,EACMa,kBAAiB,WAAG,iHACVR,EAAS,uCAAES,OAAOV,IAAiB,0CADzB,EAE1B,EACMW,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBZ,EAAS,uCAAEa,IAAId,EAAmBY,IAAU,0CAN5B,EAOhC,EACMG,iBAAgB,SAACnB,GAAI,iHACXK,EAAS,8CAASD,EAAmBJ,IAAE,0CAD5B,EAE3B,gDC1BF,QANqB,CACnBoB,gBAAiB,GAAF,OAAKlB,EAAAA,EAAAA,SAAe,SACnCmB,kBAAmB,SAACrB,GAAE,gBAAQE,EAAAA,EAAAA,SAAe,mBAAWF,EAAE,EAC1DsB,iBAAkB,GAAF,OAAKpB,EAAAA,EAAAA,SAAe,mDCGtC,QARe,CACbqB,SAAU,sCACVC,YAAY,IAAIC,MAAOC,cACvBzB,cAAe,0BACfE,iBAAkB,EAClBC,kBAAmB,wECCfuB,EAAM,IAAIC,EAAAA,EAAI,CAClBC,UAAWC,SAASC,cAAc,cAClCC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/data-source.js","webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass DataSource {\r\n  static async listRestaurants() {\r\n    const response = await fetch(API_ENDPOINT.LIST_RESTAURANT);\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL_RESTAURANT(id));\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  }\r\n}\r\n\r\nexport default DataSource;\r\n","/* eslint-disable no-empty-function */\r\n/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST_RESTAURANT: `${CONFIG.BASE_URL}/list`,\r\n  DETAIL_RESTAURANT: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n  RESTAURANT_IMAGE: `${CONFIG.BASE_URL}/images/small/`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-app-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst app = new App({\n  hamburger: document.querySelector('#hamburger'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["fetch","API_ENDPOINT","response","json","responseJson","id","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","LIST_RESTAURANT","DETAIL_RESTAURANT","RESTAURANT_IMAGE","BASE_URL","CACHE_NAME","Date","toISOString","app","App","hamburger","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}